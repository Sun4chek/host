

import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

bot = Bot('7723973774:AAHxO5XxnwbtJp7WQPs0JeQ0YVipgGe8IM8')
dp = Dispatcher()

@dp.message(Command("start"))
async def start_command(message: types.Message):
    markup = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", web_app=types.WebAppInfo(url="https://sun4chek.github.io/host/"))]
        ],
        resize_keyboard=True
    )
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", reply_markup=markup)

@dp.message()
async def handle_webapp_data(message: types.Message):
    try:
        data = message.text  # –ü–æ–ª—É—á–∞–µ–º JSON —Å WebApp
        user_data = eval(data)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º json.loads())

        response = (
            f"‚úÖ –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!\n\n"
            f"üë§ –ò–º—è: {user_data['name']}\n"
            f"üìß Email: {user_data['email']}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}"
        )

        await message.answer(response)
    except Exception as e:
        await message.answer("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö üò¢")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
