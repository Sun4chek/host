import json
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import WebAppInfo

ADMIN_BOT_TOKEN = '7801444625:AAFsxR0p11GLhHg63SQXpSRq220dzvS7HoY'
bot = Bot(ADMIN_BOT_TOKEN)
dp = Dispatcher()

ALLOWED_ADMINS = {'2124333296'}

@dp.message(Command("start"))
async def start_command(message: types.Message):
    if str(message.from_user.id) not in ALLOWED_ADMINS:
        await message.answer("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
        return

    markup = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é", web_app=WebAppInfo(url="https://a1e9-77-123-251-59.ngrok-free.app/static/admin_webapp.html"))]
            # —Ç—É—Ç —Å—Å—ã–ª–∫–∞
        ],
        resize_keyboard=True
    )
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é:", reply_markup=markup)

@dp.message()
async def handle_webapp_data(message: types.Message):
    if str(message.from_user.id) not in ALLOWED_ADMINS:
        await message.answer("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
        return

    try:
        if not message.web_app_data:
            await message.answer("–û—à–∏–±–∫–∞: WebApp –Ω–µ –ø–µ—Ä–µ–¥–∞–ª –¥–∞–Ω–Ω—ã–µ üò¢")
            return

        data = json.loads(message.web_app_data.data)
        action = data.get('action')

        if action == 'add':
            await bot.send_message(message.from_user.id, f"–î–æ–±–∞–≤–ª–µ–Ω–æ –±–ª—é–¥–æ: {data['name']}")
        elif action == 'update':
            await bot.send_message(message.from_user.id, f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –±–ª—é–¥–æ: {data['name']}")
        elif action == 'delete':
            await bot.send_message(message.from_user.id, f"–£–¥–∞–ª–µ–Ω–æ –±–ª—é–¥–æ: {data['name']}")
        elif action == 'stop_list':
            await bot.send_message(message.from_user.id, f"–ë–ª—é–¥–æ {data['name']} –¥–æ–±–∞–≤–ª–µ–Ω–æ/—É–¥–∞–ª–µ–Ω–æ –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞")

    except json.JSONDecodeError:
        await message.answer("–û—à–∏–±–∫–∞: –ø–æ–ª—É—á–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ üò¢")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö üò¢\n\n{str(e)}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())